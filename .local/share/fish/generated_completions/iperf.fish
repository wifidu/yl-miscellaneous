# iperf
# Autogenerated from man page /usr/share/man/man1/iperf.1.gz
complete -c iperf -s e -l enhanced --description 'Display enhanced output in reports.'
complete -c iperf -s f -l format --description '[kmgKMG]   format to report: Kbits, Mbits, KBytes, MBytes (see NOTES for more…'
complete -c iperf -s h -l help --description 'print a help synopsis.'
complete -c iperf -s i -l interval --description 'pause n seconds between periodic bandwidth reports.'
complete -c iperf -s l -l len --description 'set read/write buffer size (TCP) or length (UDP) to n (TCP default 128K, UDP …'
complete -c iperf -s m -l print_mss --description 'print TCP maximum segment size (MTU - TCP/IP header).'
complete -c iperf -s o -l output --description 'output the report or error message to this specified file.'
complete -c iperf -s p -l port --description 'set server port to listen on/connect to to n (default 5001).'
complete -c iperf -s u -l udp --description 'use UDP rather than TCP.'
complete -c iperf -s w -l window --description 'TCP window size (socket buffer size).'
complete -c iperf -s z -l realtime --description 'Request realtime scheduler, if supported.'
complete -c iperf -s B -l bind --description 'bind to host, an interface or multicast address.'
complete -c iperf -s C -l compatibility --description 'for use with older versions does not sent extra msgs.'
complete -c iperf -s M -l mss --description 'set TCP maximum segment size (MTU - 40 bytes).'
complete -c iperf -s N -l nodelay --description 'set TCP no delay, disabling Nagle\'s Algorithm.'
complete -c iperf -s S -l tos --description 'set the socket\'s IP_TOS (byte) field.'
complete -c iperf -s v -l version --description 'print version information and quit.'
complete -c iperf -s x -l reportexclude --description 'exclude C(connection) D(data) M(multicast) S(settings) V(server) reports.'
complete -c iperf -s y -l reportstyle --description 'if set to C or c report results as CSV (comma separated values) SERVER SPECIF…'
complete -c iperf -s s -l server --description 'run in server mode.'
complete -c iperf -s D -l daemon --description 'run the server as a daemon.'
complete -c iperf -s R -l remove --description 'remove the IPerfService (Windows only).'
complete -c iperf -s U -l single_udp --description 'run in single threaded UDP mode.'
complete -c iperf -s V -l ipv6_domain --description 'Enable IPv6 reception by setting the domain and socket to AF_INET6 (Can recei…'
complete -c iperf -s b -l bandwidth --description 'set target bandwidth to n bits/sec (default 1 Mbit/sec) or n packets per sec.'
complete -c iperf -s c -l client --description 'run in client mode, connecting to host.'
complete -c iperf -s d -l dualtest --description 'Do a bidirectional test simultaneously.'
complete -c iperf -s n -l num --description 'number of bytes to transmit (instead of -t).'
complete -c iperf -s r -l tradeoff --description 'Do a bidirectional test individually.'
complete -c iperf -s t -l time --description 'time in seconds to listen for new traffic connections, receive traffic or tra…'
complete -c iperf -s F -l fileinput --description 'input the data to be transmitted from a file.'
complete -c iperf -s I -l stdin --description 'input the data to be transmitted from stdin.'
complete -c iperf -s L -l listenport --description 'port to receive bidirectional tests back on.'
complete -c iperf -s P -l parallel --description 'number of parallel client threads to run.'
complete -c iperf -l reverse --description 'reverse the traffic flow after header exchange, useful for testing through fi…'
complete -c iperf -s T -l ttl --description 'time-to-live, for multicast (default 1).'
complete -c iperf -s X -l peerdetect --description 'run server version detection prior to traffic.'
complete -c iperf -s Z -l linux-congestion --description 'set TCP congestion control algorithm (Linux only) ENVIRONMENT.'

